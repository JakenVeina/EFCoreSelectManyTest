// <auto-generated />
using System;
using EFCoreSelectManyTest;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace EFCoreSelectManyTest.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20191209062941_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("EFCoreSelectManyTest.MyChildEntity", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("ParentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Children");
                });

            modelBuilder.Entity("EFCoreSelectManyTest.MyChildVersionEntity", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("ChildId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("NextVersionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PreviousVersionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ChildId");

                    b.HasIndex("NextVersionId")
                        .IsUnique();

                    b.HasIndex("PreviousVersionId")
                        .IsUnique();

                    b.ToTable("ChildVersions");
                });

            modelBuilder.Entity("EFCoreSelectManyTest.MyParentEntity", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Parents");
                });

            modelBuilder.Entity("EFCoreSelectManyTest.MyParentVersionEntity", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("NextVersionId")
                        .HasColumnType("bigint");

                    b.Property<long>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PreviousVersionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("NextVersionId")
                        .IsUnique();

                    b.HasIndex("ParentId");

                    b.HasIndex("PreviousVersionId")
                        .IsUnique();

                    b.ToTable("ParentVersions");
                });

            modelBuilder.Entity("EFCoreSelectManyTest.MyChildEntity", b =>
                {
                    b.HasOne("EFCoreSelectManyTest.MyParentEntity", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFCoreSelectManyTest.MyChildVersionEntity", b =>
                {
                    b.HasOne("EFCoreSelectManyTest.MyChildEntity", "Child")
                        .WithMany("Versions")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCoreSelectManyTest.MyChildVersionEntity", "NextVersion")
                        .WithOne()
                        .HasForeignKey("EFCoreSelectManyTest.MyChildVersionEntity", "NextVersionId");

                    b.HasOne("EFCoreSelectManyTest.MyChildVersionEntity", "PreviousVersion")
                        .WithOne()
                        .HasForeignKey("EFCoreSelectManyTest.MyChildVersionEntity", "PreviousVersionId");
                });

            modelBuilder.Entity("EFCoreSelectManyTest.MyParentVersionEntity", b =>
                {
                    b.HasOne("EFCoreSelectManyTest.MyParentVersionEntity", "NextVersion")
                        .WithOne()
                        .HasForeignKey("EFCoreSelectManyTest.MyParentVersionEntity", "NextVersionId");

                    b.HasOne("EFCoreSelectManyTest.MyParentEntity", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCoreSelectManyTest.MyParentVersionEntity", "PreviousVersion")
                        .WithOne()
                        .HasForeignKey("EFCoreSelectManyTest.MyParentVersionEntity", "PreviousVersionId");
                });
#pragma warning restore 612, 618
        }
    }
}
